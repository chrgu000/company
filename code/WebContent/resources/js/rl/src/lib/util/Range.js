orderjs.define("lib.util.Range",function(){rl.util.Range=rl.createClass({construct:function(n){rl.isPrototyping(arguments[0])||rl.isNonNullStr(n)&&(this.source=n.trim(),this.compile())},members:{source:"",compile:function(){var n=this.source,i=rl.util.rangeComparisons,t=n.match(rl.util.rangeChunk);if(t){var r=this.minOperator=t[1],s=this.maxOperator=t[4];this.min=t[2],this.max=t[3],this.minComparison=i[r],this.maxComparison=i[s],this._source=n}},contains:function(n){return this.minCheck(n)&&this.maxCheck(n)},minCheck:function(n){return this.hasCompiled()&&this.minComparison(n,this.min)},maxCheck:function(n){return this.hasCompiled()&&this.maxComparison(n,this.max)},hasCompiled:function(){return this._source&&this._source==this.source},toString:function(){return"[object rl.util.Range]"}}}),function(){var n={">=":function(n,i){return n>=i},"<=":function(n,i){return i>=n},">":function(n,i){return n>i},"<":function(n,i){return i>n},"==":function(n,i){return n==i},"=":function(n,i){return n==i}};rl.ext(rl.util,{rangeChunk:/^(\[|\()\s*?([-\+]?\d+(?:\.\d+)?)\s*?,\s*?([-\+]?\d+(?:\.\d+)?)\s*?(\]|\))$/,comparisons:n,rangeComparisons:{"[":n[">="],"]":n["<="],"(":n[">"],")":n["<"]}})}()});