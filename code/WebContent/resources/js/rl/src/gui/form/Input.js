/**
 * @fileOverview GUI input items basic module;
 * @change
 	#1 by prcjack Creates file.
 */
orderjs.define("gui.form.Input",["gui.engine","css>rl:inputs"],function(){rl.gui.form.Input=rl.createClass({parent:rl.gui.ControlBase,construct:function(t){rl.isPrototyping(arguments[0])||(rl.gui.form.Input.parent.call(this,t),this.initialize())},members:{selectOnFocus:!1,valueListener:null,maskValue:"",autoDoActionOnChange:!0,width:"auto",height:"",_htmlTpl:new rl.HtmlTpl('<span class="rl_comp rl_input {css}" id="{id}" title="{tip}"><label for="{ctrlId}" class="{labelCss}">{label}<input id="{ctrlId}" class="{ctrlCss}" value="{value}" type="{type}" name="{name}" style="width:{width}; height:{height};" {disabledState} {readonlyState} {sizeAttr} /></label><label for="{ctrlId}" class="annotation">{annotation}</label></span>'),initialize:function(){this.dw=new rl.dom.DomWrap,rl.isNonNullStr(this.id)||(this.id=this.autoId()),this.ctrlId=this.id+"_ctrl",rl.isEmpty(this.value)&&(this.value=this.text),rl.gui.compStore.add(this.id,this),this.autoRenderOnReady&&rl.onReady(Function.bind(this.render,this))},render:function(t){if(this._rendered)return this;t=this.getRenderTarget(t);var i,e,s,n;return n=s="",this.disabled&&(n=" disabled='disabled' "),this.readonly&&(s=" readonly='readonly' "),e=rl.isEmpty(this.height)?"":rl.dom.addUnit(this.height),i=this._htmlTpl.renderTo(t,{css:this.css+(this.alignRight?" rl_alignright":""),labelCss:this.labelCss,ctrlCss:this.ctrlCss,label:this.label,annotation:this.annotation,id:this.id,tip:this.tip,width:rl.dom.addUnit(this.width),height:e,ctrlId:this.ctrlId,name:this.name,type:this.type,value:this.value,disabledState:n,readonlyState:s,sizeAttr:this.size?"size="+this.size:""},this.renderPosition),this.dw.setTarget(i),this.initCtrl(),this.initEvents(),this.updateValueListener(),i=null,this._rendered=!0,this.fireEvent("render"),this},initCtrl:function(){var t=rl.getDom(this.ctrlId),i=this.type;this._ctrlEle=t,rl.$(t).on("change",this.hndCtrlEleChange,this),"text"==i?(this.initTextMaskStyle(),this.initDectectBehavior()):"password"==i&&this.initDectectBehavior()},initEvents:function(){var t=this.dw;t.on("mouseover",this.hndMouseover,this),t.on("keypress",this.hndKeyPress,this),t.on("keyup",this.hndKeyUp,this)},setValue:function(t){var i=this.value;if(i==t)return this;var e=this._ctrlEle;return this.text=this.value=t,rl.isElement(e)&&e.value!=t&&(e.value=t),this.updateValueListener(),this.autoDoActionOnChange&&this.doAction(),this.fireEvent("change",t,i),this},doAction:function(){rl.isFunction(this.action)&&this.action(this.value)},updateValueListener:function(){if(this.valueListener){var t=rl.getDom(this.valueListener);rl.isElement(t)&&(t.value=this.value)}},hndMouseover:function(t){if(!this.disabled){var i=this.owner;i&&rl.isFunction(i.hndItemMouseover)&&i.hndItemMouseover(t,this)}},_startDetecting:function(){this._detectTimer=Function.interval(this._detectChange,100,this)},_stopDetecting:function(){clearInterval(this._detectTimer)},initDectectBehavior:function(){rl.$(this._ctrlEle).on("focus",this._startDetecting,this),rl.$(this._ctrlEle).on("blur",this._stopDetecting,this)},_detectChange:function(){var t=this.value,i=this._ctrlEle.value;i!==t&&this.hndCtrlEleChange()},hndCtrlEleChange:function(){this.setValue(this._ctrlEle.value)},setWidth:function(t){return this.dw.setWidth(t),this},initTextMaskStyle:function(){rl.$(this._ctrlEle).on("focus",this.removeMaskStyle,this),rl.$(this._ctrlEle).on("blur",this.addMaskStyle,this),this.addMaskStyle()},addMaskStyle:function(){if(rl.isNonNullStr(this.maskValue)){var t=rl.$(this._ctrlEle).dom;rl.isNonNullStr(t.value.trim())||(rl.dw.addClass("mask_value"),t.value=this.maskValue)}},removeMaskStyle:function(){if(rl.isNonNullStr(this.maskValue)){var t=rl.$(this._ctrlEle).dom;t.value.trim()==this.maskValue&&(rl.dw.removeClass("mask_value"),t.value="")}},hndKeyPress:function(t){var i=rl.ew.init(t);13==i.keyCode()&&this.fireEvent("enter")},hndKeyUp:function(){this._detectChange()},setAnnotation:function(t){if(void 0===t||null===t)return this;if(t=String(t),!rl.isNonNullStr(t))return this;var i=this.annotation;if(i!=t){this.annotation=annotation;var e=this._getAnnotationCtn();rl.isElement(e)&&(e.innerHTML=t)}return this},setLabel:function(){},setText:function(t){return this.setValue(t)},_getLabelCtn:function(){try{return this.dw.dom.getElementsByTagName("label")[0]}catch(t){}},_getAnnotationCtn:function(){try{return this.dw.dom.lastChild}catch(t){}},toString:function(){return"[object rl.gui.form.Input]"}}}),rl.fill(rl.gui.form.Input.prototype,rl.gui.itf.iInput),rl.gui.ctype2Classes.add("input",rl.gui.form.Input)});