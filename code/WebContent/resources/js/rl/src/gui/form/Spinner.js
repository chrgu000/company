orderjs.define("gui.form.Spinner",["gui.engine","gui.form.Input","gui.button.IconButton"],function(){rl.gui.form.Spinner=rl.createClass({parent:rl.gui.ComponentBase,construct:function(t){rl.isPrototyping(arguments[0])||rl.gui.form.Spinner.parent.call(this,t)},members:{selectOnFocus:!0,_htmlTpl:new rl.HtmlTpl('<span class="rl_comp rl_input {css}" id="{id}"><label for="{ctrlId}" class="{labelCss}">{label}<input id="{ctrlId}" class="{ctrlCss}" value="{value}" type="{type}" name="{name}" style="width:{width}" {disabledState} {readonlyState} /></label><span class="annotation">{annotation}</span></span>'),render:function(t){if(this._rendered)return this;t=this.getRenderTarget(t);var e,i,n,s,r;return r=s="",i=rl.isNonNullStr(this.id)?this.id:this.autoId(),n=i+"_ctrl",this.disabled&&(r=" disabled='disabled' "),this.readonly&&(s=" readonly='readonly' "),this.id=i,this.ctrlId=n,e=this._htmlTpl.renderTo(t,{css:this.css,labelCss:this.labelCss,ctrlCss:this.ctrlCss,label:this.label,annotation:this.annotation,id:i,width:rl.dom.addUnit(this.width),ctrlId:n,name:this.name,type:this.type,value:this.value,disabledState:r,readonlyState:s},this.renderPosition),this.dw.setTarget(e),this.dw.on("keypress",this.hndKeyPress,this),this.dw.on("keyup",this.hndKeyUp,this),e=null,this._rendered=!0,this},setWidth:function(t){return this.dw.setWidth(t),this},hndKeyPress:function(t){var e=rl.ew.init(t);13==e.keyCode()&&this.fireEvent("enter")},hndKeyUp:function(t){rl.ew.init(t);this.setValue(rl.getDom(this.ctrlId).value)},_getAnnotationCtn:function(){},setText:rl.gui.FN_ReturnThis,toString:function(){return"[object rl.gui.form.Spinner]"}}})});